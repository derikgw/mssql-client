<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion> <!-- Maven POM model version (fixed value) -->

	<!-- Parent POM configuration for inheriting from the Spring Boot Starter Parent -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.15</version> <!-- Spring Boot version -->
		<relativePath/> <!-- Look up parent from repository instead of a relative path -->
	</parent>

	<!-- Project coordinates -->
	<groupId>com.derikwilson</groupId>
	<artifactId>mssql-client</artifactId>
	<version>0.0.1-SNAPSHOT</version> <!-- Snapshot version for development -->

	<name>mssql-client</name> <!-- Human-readable project name -->
	<description>An MSSQL Client</description> <!-- Project description -->

	<!-- Project properties -->
	<properties>
		<java.version>11</java.version> <!-- Java version to ensure compatibility -->
		<maven.compiler.source>11</maven.compiler.source> <!-- Source compatibility -->
		<maven.compiler.target>11</maven.compiler.target> <!-- Target compatibility -->
	</properties>

	<!-- Project dependencies -->
	<dependencies>
		<!-- Spring Data JPA for database interaction -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Microsoft SQL Server JDBC driver for database connectivity -->
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<version>12.6.1.jre11</version> <!-- Ensure compatibility with Java 11 -->
		</dependency>

		<!-- JUnit Jupiter API for unit testing -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.7.0</version>
			<scope>test</scope> <!-- Available only for the test compilation and execution phases -->
		</dependency>

		<!-- JUnit Jupiter Engine for running JUnit 5 tests -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.7.0</version>
			<scope>test</scope>
		</dependency>

		<!-- Spring Boot Starter Test for comprehensive testing facilities -->
		<!-- Excludes JUnit 4 to ensure JUnit 5 is used -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId> <!-- Excludes the JUnit 4 engine -->
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<!-- Build configuration -->
	<build>
		<plugins>
			<!-- Spring Boot Maven Plugin for packaging and running the application -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Maven Surefire Plugin for running unit tests -->
			<!-- Configures the test file naming patterns and sets the active Spring profile to 'local' -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<includes>
						<include>**/*Tests.java</include>
						<include>**/*Test.java</include>
					</includes>
					<argLine>-Dspring.profiles.active=local</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
