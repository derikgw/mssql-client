# Database Configuration
# Defines the JDBC URL for connecting to the SQL Server database. Includes the database instance, name, and connection settings.
spring.datasource.jdbc-url=jdbc:sqlserver://localhost:1433;instanceName=SQLEXPRESS;databaseName=TESTDB;encrypt=false;trustServerCertificate=true

# (Deprecated) Defines the database URL. It's recommended to use spring.datasource.jdbc-url instead for SQL Server connections.
spring.datasource.url=jdbc:sqlserver://localhost:1433;instanceName=SQLEXPRESS;databaseName=TESTDB;encrypt=false;trustServerCertificate=true

# Specifies the username for database access. Replace 'derikCrud' with the actual username configured in your database.
spring.datasource.username=myuser

# Specifies the password for database access. It's crucial to replace 'mypassword' with a strong, secret password in production environments.
spring.datasource.password=mypassword

# Defines the JDBC driver class name for SQL Server.
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# JPA/Hibernate Configuration
# Enables logging of SQL statements.
spring.jpa.show-sql=true

# Configures Hibernate DDL (Data Definition Language) auto-execution. 'none' disables automatic schema creation or updates.
spring.jpa.hibernate.ddl-auto=none

# Specifies the Hibernate SQL dialect for SQL Server 2012, ensuring compatibility with SQL generation.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect

# HikariCP Connection Pool Configuration
# Specifies the maximum number of connections that the pool can hold.
spring.datasource.hikari.maximum-pool-size=5

# Sets the minimum number of idle connections that HikariCP tries to maintain in the pool.
spring.datasource.hikari.minimum-idle=5

# The maximum number of milliseconds that the client will wait for a connection from the pool. If this time is exceeded without a connection becoming available, a SQLException will be thrown.
spring.datasource.hikari.connection-timeout=30000

# The maximum amount of time (in milliseconds) that a connection is allowed to sit idle in the pool. Whether a connection is retired as idle or not is subject to a maximum variation of +30 seconds, and average variation of +15 seconds.
spring.datasource.hikari.idle-timeout=300000

# Controls the maximum lifetime of a connection in the pool. This setting helps to avoid potential issues with long-lived database connections.
spring.datasource.hikari.max-lifetime=1800000
